<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.ranji.longan</groupId>
		<artifactId>longan</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	
	<artifactId>command</artifactId>
	<name>command</name>
	<url>http://maven.apache.org</url>
	
	<dependencies>
		<!-- 依赖于codegen模块 -->
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>codegen</artifactId>
			<version>${project.version}</version>
		</dependency>
		<!-- 依赖于skeleton模块 -->
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>skeleton</artifactId>
			<version>${project.version}</version>
		</dependency>
		<!-- 依赖于父模块的junit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
	</dependencies>
	
	<build>
		<plugins>
			<!-- 使用父模块的编译插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<!-- 打包为jar文件时设置主类信息的插件，以便此jar可以直接运行的插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.2</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>org.ranji.longan.command.Longan</mainClass>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- 使用父模块的目录结构生成插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
 				 <artifactId>maven-assembly-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
	
</project>
